// Test file for PDF export functionality
// This file can be used to test the PDF generation without the full React app

const jsPDF = require('jspdf');

function testPDFGeneration() {
  try {
    const doc = new jsPDF();
    const pageWidth = doc.internal.pageSize.width;
    const margin = 20;
    let yPosition = 20;

    // Add header
    doc.setFontSize(24);
    doc.setTextColor(6, 182, 212); // Cyan color
    doc.text('HealthConnect - Patient Profile', pageWidth / 2, yPosition, { align: 'center' });
    
    yPosition += 20;
    doc.setFontSize(12);
    doc.setTextColor(75, 85, 99); // Gray color
    doc.text(`Generated on: ${new Date().toLocaleDateString()} at ${new Date().toLocaleTimeString()}`, pageWidth / 2, yPosition, { align: 'center' });
    
    yPosition += 30;

    // Personal Information Section
    doc.setFontSize(16);
    doc.setTextColor(17, 24, 39); // Dark gray
    doc.text('Personal Information', margin, yPosition);
    yPosition += 15;

    doc.setFontSize(10);
    doc.setTextColor(55, 65, 81); // Medium gray

    const personalInfo = [
      ['Name', 'John Doe'],
      ['Email', 'john.doe@example.com'],
      ['Phone Number', '+1 (555) 123-4567'],
      ['Date of Birth', '01/15/1990'],
      ['Address', '123 Main Street'],
      ['City', 'New York'],
      ['State', 'NY'],
      ['Zip Code', '10001']
    ];

    personalInfo.forEach(([label, value]) => {
      if (yPosition > 250) {
        doc.addPage();
        yPosition = 20;
      }
      doc.text(`${label}:`, margin, yPosition);
      doc.text(value, margin + 50, yPosition);
      yPosition += 8;
    });

    yPosition += 10;

    // Medical History Section
    if (yPosition > 250) {
      doc.addPage();
      yPosition = 20;
    }

    doc.setFontSize(16);
    doc.setTextColor(17, 24, 39);
    doc.text('Medical History', margin, yPosition);
    yPosition += 15;

    doc.setFontSize(10);
    doc.setTextColor(55, 65, 81);
    
    const medicalHistory = "Patient has a history of seasonal allergies and mild asthma. No major surgeries or chronic conditions. Currently taking no medications. Last physical examination was completed in January 2024 with normal results.";
    
    // Split medical history into lines that fit the page
    const medicalHistoryLines = doc.splitTextToSize(medicalHistory, pageWidth - 2 * margin);
    medicalHistoryLines.forEach((line) => {
      if (yPosition > 250) {
        doc.addPage();
        yPosition = 20;
      }
      doc.text(line, margin, yPosition);
      yPosition += 6;
    });
    
    yPosition += 10;

    // Settings Section
    if (yPosition > 250) {
      doc.addPage();
      yPosition = 20;
    }

    doc.setFontSize(16);
    doc.setTextColor(17, 24, 39);
    doc.text('Account Settings', margin, yPosition);
    yPosition += 15;

    doc.setFontSize(10);
    doc.setTextColor(55, 65, 81);

    // Notification Settings
    doc.setFontSize(12);
    doc.setTextColor(17, 24, 39);
    doc.text('Notification Preferences:', margin, yPosition);
    yPosition += 10;

    doc.setFontSize(10);
    doc.setTextColor(55, 65, 81);
    const notificationSettings = [
      ['Email Notifications', 'Enabled'],
      ['SMS Notifications', 'Disabled'],
      ['Push Notifications', 'Enabled'],
      ['Appointment Reminders', 'Enabled'],
      ['Message Notifications', 'Enabled'],
      ['Health Tips', 'Disabled'],
      ['Marketing Emails', 'Disabled']
    ];

    notificationSettings.forEach(([setting, status]) => {
      if (yPosition > 250) {
        doc.addPage();
        yPosition = 20;
      }
      doc.text(`${setting}:`, margin, yPosition);
      doc.text(status, margin + 80, yPosition);
      yPosition += 8;
    });

    // Footer
    if (yPosition > 250) {
      doc.addPage();
      yPosition = 20;
    }

    yPosition += 20;
    doc.setFontSize(10);
    doc.setTextColor(107, 114, 128); // Light gray
    doc.text('This document contains your personal health information. Please keep it secure.', pageWidth / 2, yPosition, { align: 'center' });
    
    yPosition += 10;
    doc.text('Generated by HealthConnect - Your trusted healthcare platform', pageWidth / 2, yPosition, { align: 'center' });

    // Save the PDF
    const fileName = `test-patient-profile-${Date.now()}.pdf`;
    doc.save(fileName);
    
    console.log('PDF generated successfully!');
    return true;
  } catch (error) {
    console.error('Error generating PDF:', error);
    return false;
  }
}

// Run the test
if (typeof window !== 'undefined') {
  // Browser environment
  window.testPDFGeneration = testPDFGeneration;
  console.log('PDF test function available. Run testPDFGeneration() to test.');
} else {
  // Node.js environment
  testPDFGeneration();
}
